{"version":3,"file":"react-json-form.min.js","sources":["../src/data.js","../src/components/buttons.js","../src/components/loaders.js","../src/util.js","../src/components/form.js","../src/components/containers.js","../src/ui.js","../src/form.js","../src/index.js","../src/renderer.js"],"sourcesContent":["export function getBlankObject(schema) {\n    let keys = {};\n\n    let schema_keys = schema.keys || schema.properties;\n\n    for (let key in schema_keys) {\n        let value = schema_keys[key];\n        let type = value.type;\n\n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (type === 'array')\n            keys[key] = getBlankArray(value);\n        else if (type === 'object')\n            keys[key] = getBlankObject(value);\n        else if (type === 'boolean')\n            keys[key] = value.default || false;\n        else if (type === 'integer' || type === 'number')\n            keys[key] = value.default || null;\n        else // string etc.\n            keys[key] = value.default || '';\n    }\n\n    return keys;\n}\n\n\nexport function getBlankArray(schema) {\n    let items = [];\n    let type = schema.items.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array')\n        items.push(getBlankArray(schema.items))\n    else if (type === 'object')\n        items.push(getBlankObject(schema.items));\n    else if (type === 'boolean')\n        items.push(schema.items.default || false);\n    else if (type === 'integer' || type === 'number')\n        items.push(schema.items.default || null);\n    else // string, etc.\n        items.push(schema.items.default || '');\n\n    return items;\n}\n\n\nexport function getBlankData(schema) {\n    let type = schema.type;\n\n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array')\n        return getBlankArray(schema);\n    else if (type === 'object')\n        return getBlankObject(schema);\n    else if (type === 'boolean')\n        return schema.default || false;\n    else if (type === 'integer' || type === 'number')\n        return schema.default || null;\n    else // string, etc.\n        return schema.default || '';\n}\n\n\n\nfunction getSyncedArray(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    for (let i = 0; i < data.length; i++) {\n        let item = data[i];\n\n        if (type === 'array') {\n            newData[i] = getSyncedArray(item, schema.items);\n        } else if (type === 'object') {\n            newData[i] = getSyncedObject(item, schema.items);\n        }\n        else {\n            if ((type === 'integer' || type === 'number') && item === '')\n                newData[i] = null;\n        }\n    }\n\n    return newData;\n}\n\n\nfunction getSyncedObject(data, schema) {\n    let newData = JSON.parse(JSON.stringify(data));\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let schemaValue = schema_keys[key];\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n      \n        if (!data.hasOwnProperty(key)) {\n            if (type === 'array')\n                newData[key] = getSyncedArray([], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject({}, schemaValue);\n            else if (type === 'boolean')\n                newData[key] = false;\n            else if (type === 'integer' || type === 'number')\n                newData[key] = null;\n            else\n                newData[key] = '';\n        } else {\n            if (type === 'array')\n                newData[key] = getSyncedArray(data[key], schemaValue);\n            else if (type === 'object')\n                newData[key] = getSyncedObject(data[key], schemaValue);\n            else {\n                if ((type === 'integer' || type === 'number') && data[key] === '')\n                    newData[key] = null;\n                else\n                    newData[key] = data[key];\n            }\n        }\n        \n    }\n\n    return newData;\n}\n\n\nexport function getSyncedData(data, schema) {\n    // adds those keys to data which are in schema but not in data\n\n    let type = schema.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    if (type === 'array') {\n        return getSyncedArray(data, schema);\n    } else if (type === 'object') {\n        return getSyncedObject(data, schema);\n    }\n\n    return data;\n}\n","export default function Button({className, ...props}) {\n    if (!className)\n        className = '';\n\n    let classes = className.split(' ');\n\n    className = '';\n    for (let i = 0; i < classes.length; i++) {\n        className = className + 'rjf-' + classes[i] + '-button ';\n    }\n\n    return (\n        <button \n            className={className.trim()}\n            type=\"button\"\n            {...props}\n        >\n            {props.children}\n        </button>\n    );\n}","export default function Loader (props) {\n    return <div className=\"rjf-loader\"></div>;\n}\n","export const EditorContext = React.createContext();\n\n\nexport function capitalize(string) {\n    if (!string)\n        return '';\n    \n    return string.charAt(0).toUpperCase() + string.substr(1).toLowerCase();\n}\n\n\nexport function getVerboseName(name) {\n    if (name === undefined || name === null)\n        return '';\n\n    name = name.replace(/_/g, ' ');\n    return capitalize(name);\n}\n\n\nexport function getCsrfCookie() {\n    if ((document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)).length) {\n        return document.cookie.split(';').filter((item) => item.trim().indexOf('csrftoken=') === 0)[0].split('=')[1];\n    }\n    return null;\n}\n","import Button from './buttons';\nimport Loader from './loaders';\nimport {EditorContext, getCsrfCookie, capitalize} from '../util';\n\n\nexport function FormInput({label, help_text, error, inputRef, ...props}) {\n\n    if (props.type === 'string')\n        props.type = 'text'\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    if (props.value === null)\n        props.value = '';\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <input {...props} />\n        </div>\n    );\n}\n\n\nexport function FormCheckInput({label, help_text, error, value, ...props}) {\n\n    if (!label)\n        label = props.name.toUpperCase();\n\n    if (props.type === 'bool')\n        props.type = 'checkbox';\n\n    if (props.checked === undefined)\n        props.checked = value;\n\n    if (props.checked === '' || props.checked === null || props.checked === undefined)\n        props.checked = false\n\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            <label><input {...props} /> {label}</label>\n        </div>\n    );\n}\n\n\nexport function FormRadioInput({label, help_text, error, value, options, ...props}) {\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            <label>{label}</label>\n            {options.map((option, i) => {\n                let label, inputValue;\n                if (typeof option === 'object') {\n                    label = option.label;\n                    inputValue = option.value;\n                } else {\n                    label = option;\n                    if (typeof label === 'boolean')\n                        label = capitalize(label.toString());\n                    inputValue = option;\n                }\n\n                return (\n                    <label key={label + '_' + inputValue + '_' + i}>\n                        <input {...props} value={inputValue} checked={inputValue === value} /> {label}\n                    </label>\n                );\n            })}\n        </div>\n    );\n}\n\n\nexport function FormSelectInput({label, help_text, error, value, options, ...props}) {\n    if (props.readOnly)\n        props.disabled = true;\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <select value={value || ''} {...props}>\n                <option disabled value=\"\" key={'__placehlder'}>Select...</option>\n                {options.map((option, i) => {\n                    let label, inputValue;\n                    if (typeof option === 'object') {\n                        label = option.label;\n                        inputValue = option.value;\n                    } else {\n                        label = option;\n                        if (typeof label === 'boolean')\n                            label = capitalize(label.toString());\n                        inputValue = option;\n                    }\n\n                    return (\n                        <option value={inputValue} key={label + '_' + inputValue + '_' + i}>\n                            {label}\n                        </option>\n                    );\n                })}\n            </select>\n        </div>\n    );\n}\n\nexport function dataURItoBlob(dataURI) {\n      // Split metadata from data\n      const splitted = dataURI.split(\",\");\n      // Split params\n      const params = splitted[0].split(\";\");\n      // Get mime-type from params\n      const type = params[0].replace(\"data:\", \"\");\n      // Filter the name property from params\n      const properties = params.filter(param => {\n            return param.split(\"=\")[0] === \"name\";\n      });\n      // Look for the name and use unknown if no name property.\n      let name;\n      if (properties.length !== 1) {\n            name = \"unknown\";\n      } else {\n            // Because we filtered out the other property,\n            // we only have the name case here.\n            name = properties[0].split(\"=\")[1];\n      }\n\n      // Built the Uint8Array Blob parameter from the base64 string.\n      const binary = atob(splitted[1]);\n      const array = [];\n      for (let i = 0; i < binary.length; i++) {\n            array.push(binary.charCodeAt(i));\n      }\n      // Create the blob object\n      const blob = new window.Blob([new Uint8Array(array)], { type });\n\n      return {blob, name};\n}\n\n\n\nexport class FormFileInput extends React.Component {\n    static contextType = EditorContext;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: props.value,\n            fileName: this.getFileName(),\n            loading: false\n        };\n\n        this.inputRef = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevProps.value) {\n            this.setState({\n                value: this.props.value, \n                fileName: this.getFileName()\n            });\n        }\n    }\n\n    getFileName = () => {\n        if (!this.props.value)\n            return '';\n\n        if (this.props.type === 'data-url') {\n            return this.extractFileInfo(this.props.value).name;\n        } else if (this.props.type === 'file-url') {\n            return this.props.value;\n        } else {\n            return 'Unknown file';\n        }\n    }\n\n    extractFileInfo = (dataURL) => {\n        const {blob, name} = dataURItoBlob(dataURL);\n        return {\n            name: name,\n            size: blob.size,\n            type: blob.type\n        }\n    }\n\n    addNameToDataURL = (dataURL, name) => {\n        return dataURL.replace(';base64', ';name=' + encodeURIComponent(name) + ';base64');\n    }\n\n    handleChange = (e) => {\n        if (this.props.type === 'data-url') {\n            let file = e.target.files[0];\n            let fileName = file.name\n\n            let reader = new FileReader();\n\n            reader.onload = () => {\n\n                // this.setState({src: reader.result});\n\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: this.addNameToDataURL(reader.result, fileName),\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n\n            }\n            reader.readAsDataURL(file);\n        } else if (this.props.type === 'file-url') {\n            let endpoint = this.context.fileUploadEndpoint;\n            if (!endpoint) {\n                console.error(\n                    \"Error: fileUploadEndpoint option need to be passed \"\n                    + \"while initializing editor for enabling file uploads.\");\n                alert(\"Files can't be uploaded.\");\n                return;\n            }\n\n            this.setState({loading: true});\n\n            let formData = new FormData();\n            formData.append('field_name', this.context.fieldName);\n            formData.append('model_name', this.context.modelName);\n            formData.append('coordinates', JSON.stringify(this.props.name.split('-').slice(1)));\n            formData.append('file', e.target.files[0]);\n\n            fetch(endpoint, {\n                method: 'POST',\n                headers: {\n                    'X-CSRFToken': getCsrfCookie(),\n                },\n                body: formData\n            })\n            .then((response) => response.json())\n            .then((result) => {\n                // we create a fake event object\n                let event = {\n                    target: {\n                        type: 'text',\n                        value: result.file_path,\n                        name: this.props.name\n                    }\n                };\n\n                this.props.onChange(event);\n                this.setState({loading: false});\n            })\n            .catch((error) => {\n                alert('Something went wrong while uploading file');\n                console.error('Error:', error);\n                this.setState({loading: false});\n            });\n\n        }\n\n    }\n\n    showFileBrowser = () => {\n        this.inputRef.current.click();\n    }\n\n    render() {\n        let {label, value, ...props} = {value, ...this.props};\n        props.type = 'file';\n        props.onChange = this.handleChange;\n\n        if (props.readOnly)\n            props.disabled = true;\n\n\n        return (\n            <div>\n                {label && <label>{label}</label>}\n                <div className=\"rjf-file-field\">\n                    {this.state.value && \n                        <div className=\"rjf-current-file-name\">Current file: <span>{this.state.fileName}</span></div>\n                    }\n                    {this.state.value && !this.state.loading && 'Change:'}\n                    {this.state.loading ?\n                        <div className=\"rjf-file-field-loading\"><Loader/> Uploading...</div>\n                    : \n                    <div className=\"rjf-file-field-input\">\n                        <FormInput {...props} inputRef={this.inputRef} />\n                    </div>\n                    }\n                    </div>\n            </div>\n        );\n    }\n}\n\n\nexport function FormTextareaInput({label, help_text, error, inputRef, ...props}) {\n\n    delete props.type;\n\n    if (inputRef)\n        props.ref = inputRef;\n\n    return (\n        <div>\n            {label && <label>{label}</label>}\n            <textarea {...props} />\n        </div>\n    );\n}\n","import Button from './buttons';\n\n\nexport function GroupTitle(props) {\n    if (!props.children)\n        return null;\n\n    return (\n        <div className=\"rjf-form-group-title\">{props.children}</div>\n    );\n}\n\n\nexport function FormRowControls(props) {\n    return (\n        <div className=\"rjf-form-row-controls\">\n            {props.onMoveUp &&\n                <Button \n                    className=\"move-up\"\n                    onClick={props.onMoveUp}\n                    title=\"Move up\"\n                >\n                    <span>&uarr;</span>\n                </Button>\n            }\n            {props.onMoveDown &&\n                <Button \n                    className=\"move-down\"\n                    onClick={props.onMoveDown}\n                    title=\"Move down\"\n                >\n                    <span>&darr;</span>\n                </Button>\n            }\n            {props.onRemove &&\n                <Button \n                    className=\"remove\"\n                    onClick={props.onRemove}\n                    title=\"Remove\"\n                >\n                    <span>&times;</span>\n                </Button>\n            }\n        </div>\n    );\n}\n\nexport function FormRow(props) {\n    return (\n        <div className=\"rjf-form-row\">\n            <FormRowControls {...props} />\n            <div className=\"rjf-form-row-inner\">\n                {props.children}\n            </div>\n        </div>\n    );\n}\n\n\nexport function FormGroup(props) {\n    let hasChildren = React.Children.count(props.children);\n\n    let innerClassName = props.level === 0 && !hasChildren\n        ? \"\" \n        : \"rjf-form-group-inner\";\n\n    return (\n        <div className=\"rjf-form-group\">\n            {props.level === 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n            <div className={innerClassName}>\n                {props.level > 0 && <GroupTitle>{props.schema.title}</GroupTitle>}\n                {props.children}\n                {props.addable && \n                <Button\n                    className=\"add\"\n                    onClick={(e) => props.onAdd()}\n                    title=\"Add new\"\n                >\n                    {hasChildren ? 'Add more' : 'Add'}\n                </Button>\n                }\n            </div>\n        </div>\n    );\n}\n","import {getBlankData} from './data';\nimport {Button, FormInput, FormCheckInput, FormRadioInput, FormSelectInput,\n    FormFileInput, FormRow, FormGroup, FormRowControls, FormTextareaInput} from './components';\nimport {getVerboseName} from './util';\n\n\nfunction handleChange(e, fieldType, callback) {\n    let type = e.target.type\n    let value;\n\n    if (type === 'checkbox') {\n        value = e.target.checked;\n    } else {\n        value = e.target.value;\n    }\n\n    if (fieldType === 'number' || fieldType === 'integer') {\n        value = value.trim();\n        if (value === '')\n            value = null;\n        else if (!isNaN(Number(value)))\n            value = Number(value);\n    } else if (fieldType === 'boolean') {\n        if (value === 'false' || value === false)\n            value = false;\n        else\n            value = true;\n    }\n\n    callback(e.target.name, value);\n}\n\n\nfunction FormField(props) {\n    let inputProps = {\n        name: props.name,\n        value: props.data,\n        readOnly: props.schema.readOnly || props.schema.readonly,\n    };\n\n    let type = props.schema.type;\n    if (props.schema.choices) {\n        inputProps.options = props.schema.choices;\n        type = 'select';\n    }\n    if (props.schema.widget)\n        type = props.schema.widget;\n\n    let InputField;\n\n    switch (type) {\n        case 'string':\n            InputField = FormInput;\n\n            if (props.schema.format) {\n                if (props.schema.format === 'data-url' || props.schema.format === 'file-url') {\n                    InputField = FormFileInput;\n                }\n                inputProps.type = props.schema.format;\n            }\n            else {\n                inputProps.type = 'text';\n            }\n            break;\n        case 'number':\n            inputProps.type = 'number';\n            InputField = FormInput;\n            break;\n        case 'integer':\n            inputProps.type = 'number';\n            inputProps.step = '1';\n            InputField = FormInput;\n            break;\n        case 'boolean':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'checkbox':\n            inputProps.type = 'checkbox';\n            InputField = FormCheckInput;\n            break;\n        case 'radio':\n            inputProps.type = 'radio';\n            InputField = FormRadioInput;\n            break;\n        case 'select':\n            InputField = FormSelectInput;\n            break;\n        case 'textarea':\n            InputField = FormTextareaInput;\n            break;\n        default:\n            inputProps.type = 'text';\n            InputField = FormInput;\n    }\n\n   return (\n        <InputField \n            {...inputProps}\n            label={\n                props.editable ? <span>{props.schema.title} <Button className=\"edit\" onClick={props.onEdit} title=\"Edit\">Edit</Button></span>\n                :\n                props.schema.title\n            }\n            onChange={(e) => handleChange(e, props.schema.type, props.onChange)}\n        />\n    );\n}\n\n\nexport function getStringFormRow(args) {\n    let {\n        data, schema, name, onChange, onRemove, removable, onEdit, editable, \n        onMoveUp, onMoveDown\n    } = args;\n\n    return (\n        <FormRow \n            key={name}\n            onRemove={removable ? (e) => onRemove(name) : null}\n            onMoveUp={onMoveUp}\n            onMoveDown={onMoveDown}\n        >\n            <FormField \n                data={data}\n                schema={schema}\n                name={name}\n                onChange={onChange}\n                onEdit={onEdit}\n                editable={editable}\n            />\n        </FormRow>\n    );\n}\n\nexport function getArrayFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, onMove, level} = args;\n\n    let rows = [];\n    let groups = [];\n\n    let removable = true;\n    let min_items = schema.min_items || schema.minItems || 0;\n    if (data.length <= min_items)\n        removable = false;\n\n    let addable = true;\n    let max_items = schema.max_items || schema.maxItems || 100;\n    if (data.length >= max_items)\n        addable = false;\n\n    let type = schema.items.type;\n    \n    if (type === 'list')\n        type = 'array';\n    else if (type === 'dict')\n        type = 'object';\n\n    let nextArgs = {\n        schema: schema.items,\n        onChange: onChange,\n        onAdd: onAdd,\n        onRemove: onRemove,\n        level: level + 1,\n        removable: removable,\n        onMove: onMove,\n    };\n\n    for (let i = 0; i < data.length; i++) {\n        nextArgs.data = data[i];\n        nextArgs.name = name + '-' + i;\n\n        if (i === 0)\n            nextArgs.onMoveUp = null;\n        else\n            nextArgs.onMoveUp = (e) => onMove(name + '-' + i, name + '-' + (i - 1));\n\n        if (i === data.length - 1)\n            nextArgs.onMoveDown = null;\n        else\n            nextArgs.onMoveDown = (e) => onMove(name + '-' + i, name + '-' + (i + 1));;\n\n        if (type === 'array') {\n            groups.push(getArrayFormRow(nextArgs));\n        } else if (type === 'object') {\n            groups.push(getObjectFormRow(nextArgs));\n        } else {\n            rows.push(getStringFormRow(nextArgs));\n        } \n    }\n\n    let coords = name; // coordinates for insertion and deletion\n\n    if (rows.length || (!rows.length && !groups.length)) {\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={addable}\n                onAdd={() => onAdd(getBlankData(schema.items), coords)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    if (groups.length) {\n        let groupTitle = schema.title ? <div className=\"rjf-form-group-title\">{schema.title}</div> : null;\n\n        groups = (\n            <div key={'group_' + name}>\n                {groupTitle}\n                {groups.map((i, index) => (\n                    <div className=\"rjf-form-group-wrapper\" key={'group_wrapper_' + name + '_' + index}>\n                        <FormRowControls\n                            onRemove={removable ? (e) => onRemove(name + '-' + index) : null}\n                            onMoveUp={index > 0 ? (e) => onMove(name + '-' + index, name + '-' + (index - 1)) : null}\n                            onMoveDown={index < groups.length - 1 ? (e) => onMove(name + '-' + index, name + '-' + (index + 1)) : null}\n                        />\n                        {i}\n                    </div>\n                    )\n                )}\n                {addable && \n                    <Button\n                        className=\"add\"\n                        onClick={(e) => onAdd(getBlankData(schema.items), coords)}\n                        title=\"Add new\"\n                    >\n                        Add item\n                    </Button>\n                }\n            </div>\n        )\n    }\n\n    return [...rows, ...groups];\n}\n\n\nexport function getObjectFormRow(args) {\n    let {data, schema, name, onChange, onAdd, onRemove, level, onMove} = args;\n\n    let rows = [];\n\n    let schema_keys = schema.keys || schema.properties;\n\n    let keys = [...Object.keys(schema_keys)];\n\n    if (schema.additionalProperties)\n        keys = [...keys, ...Object.keys(data).filter((k) => keys.indexOf(k) === -1)];\n\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let value = data[key];\n        let childName = name + '-' + key;\n        let schemaValue = schema_keys[key] || {type: 'string'};\n\n        let type = schemaValue.type;\n    \n        if (type === 'list')\n            type = 'array';\n        else if (type === 'dict')\n            type = 'object';\n\n        if (!schemaValue.title)\n            schemaValue.title = getVerboseName(key);\n\n        let removable = false;\n        if (schema_keys[key] === undefined)\n            removable = true;\n\n        let nextArgs = {\n            data: value,\n            schema: schemaValue,\n            name: childName,\n            onChange: onChange,\n            onAdd: onAdd,\n            onRemove: onRemove,\n            level: level + 1,\n            removable: removable,\n            onMove: onMove\n        };\n\n         if (type === 'array') {\n            rows.push(getArrayFormRow(nextArgs));\n        } else if (type === 'object') {\n            rows.push(getObjectFormRow(nextArgs));\n        } else {\n            nextArgs.onEdit = () => handleKeyEdit(data, key, value, childName, onAdd, onRemove);\n            nextArgs.editable = removable;\n            rows.push(getStringFormRow(nextArgs));\n        }\n    }\n\n    if (rows.length || schema.additionalProperties) {\n        let className = \"rjf-form-group-inner\";\n        if (level === 0 && !rows.length)\n            className = \"\";\n        \n        let coords = name;\n\n        rows = (\n            <FormGroup\n                level={level}\n                schema={schema}\n                addable={schema.additionalProperties}\n                onAdd={() => handleKeyValueAdd(data, coords, onAdd)}\n                key={'row_group_' + name}\n            >\n                {rows}\n            </FormGroup>\n        );\n    }\n\n    return rows;\n}\n\n\nfunction handleKeyValueAdd(data, coords, onAdd) {\n    let key = prompt(\"Add new key\");\n    if (key === null) // clicked cancel\n        return;\n\n    key = key.trim();\n    if (!key)\n        alert(\"(!) Can't add empty key.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(key))\n        alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n    else\n        onAdd(\"\", coords + '-' + key);   \n}\n\n\nfunction handleKeyEdit(data, key, value, coords, onAdd, onRemove) {\n    let newKey = prompt(\"Rename key\", key);\n    if (newKey === null) // clicked cancel\n        return;\n\n    newKey = newKey.trim();\n\n    if (newKey === key) // same keys\n        return;\n\n    if (!newKey)\n        return alert(\"(!) Key name can't be empty.\\r\\n\\r\\n‎\");\n    else if (data.hasOwnProperty(newKey))\n        return alert(\"(!) Duplicate keys not allowed. This key already exists.\\r\\n\\r\\n‎\");\n\n    onAdd(value, name + '-' + newKey);\n    onRemove(coords);\n}\n","import {getBlankData, getSyncedData} from './data';\nimport {getArrayFormRow, getObjectFormRow} from './ui';\nimport {EditorContext} from './util';\n\n\nexport default class Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dataInput = document.getElementById(this.props.dataInputId);\n        this.schema = props.schema;\n\n        let data = props.data;\n\n        if (!data) {\n            // create empty data from schema\n            data = getBlankData(this.schema);\n        } else {\n            // data might be stale if schema has new keys, so add them to data\n            try {\n                data = getSyncedData(data, this.schema);\n            } catch (error) {\n                console.error(\"Error: Schema and data structure don't match\");\n                console.error(error);\n            }\n        }\n\n        this.state = {\n            value: '',\n            data: data\n        };\n        \n        // update data in the input\n        this.populateDataInput();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.data !== prevState.data) {\n            this.populateDataInput();\n        }\n    }\n\n    populateDataInput = () => {\n        this.dataInput.value = JSON.stringify(this.state.data);\n    }\n\n    handleChange = (coords, value) => {\n        /*\n            e.target.name is a chain of indices and keys:\n            xxx-0-key-1-key2 and so on.\n            These can be used as coordinates to locate \n            a particular deeply nested item.\n\n            This first coordinate is not important and should be removed.\n        */\n        coords = coords.split('-');\n\n        coords.shift(); // remove first coord\n\n        function setDataUsingCoords(coords, data, value) {\n            let coord = coords.shift();\n            if (!isNaN(Number(coord)))\n                coord = Number(coord);\n\n            if (coords.length) {\n                setDataUsingCoords(coords, data[coord], value);\n            } else {\n                data[coord] = value;\n            }\n        }\n\n        let _data = JSON.parse(JSON.stringify(this.state.data));\n\n        setDataUsingCoords(coords, _data, value);\n\n        this.setState({data: _data});\n    }\n\n    getFields = () => {\n        let data = this.state.data;\n        let formGroups = [];\n\n        try {\n            let type = this.schema.type;\n    \n            if (type === 'list')\n                type = 'array';\n            else if (type === 'dict')\n                type = 'object';\n\n            let args = {\n                data: data,\n                schema: this.schema,\n                name: 'rjf',\n                onChange: this.handleChange,\n                onAdd: this.addFieldset,\n                onRemove: this.removeFieldset,\n                onMove: this.moveFieldset,\n                level: 0\n            };\n\n            if (type === 'array') {\n                return getArrayFormRow(args);\n            } else if (type === 'object') {\n                return getObjectFormRow(args);\n            }\n        } catch (error) {\n            formGroups = (\n                <p style={{color: '#f00'}}>\n                    <strong>(!) Error:</strong> Schema and data structure do not match.\n                </p>\n            );\n        }\n\n        return formGroups;\n    }\n\n    addFieldset = (blankData, coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            addDataUsingCoords(coords, _data, blankData);\n\n            return {data: _data};\n        });\n    }\n\n    removeFieldset = (coords) => {\n        coords = coords.split('-');\n        coords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            removeDataUsingCoords(coords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    moveFieldset = (oldCoords, newCoords) => {\n        oldCoords = oldCoords.split(\"-\");\n        oldCoords.shift();\n\n        newCoords = newCoords.split(\"-\");\n        newCoords.shift();\n\n        this.setState((state) => {\n            let _data = JSON.parse(JSON.stringify(state.data));\n\n            moveDataUsingCoords(oldCoords, newCoords, _data);\n\n            return {data: _data};\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"rjf-form-wrapper\">\n                <fieldset className=\"module aligned\">\n                    <EditorContext.Provider \n                        value={{\n                            fileUploadEndpoint: this.props.fileUploadEndpoint,\n                            fieldName: this.props.fieldName,\n                            modelName: this.props.modelName,\n                        }}\n                    >\n                    {this.getFields()}\n                    </EditorContext.Provider>\n                </fieldset>\n            </div>\n        );\n    }\n}\n\n\nfunction addDataUsingCoords(coords, data, value) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        addDataUsingCoords(coords, data[coord], value);\n    } else {\n        if (Array.isArray(data[coord])) {\n            data[coord].push(value);\n        }\n        else {\n            if (Array.isArray(data)) {\n                data.push(value);\n            } else {\n                data[coord] = value;\n            }\n        }\n    }\n}\n\nfunction removeDataUsingCoords(coords, data) {\n    let coord = coords.shift();\n    if (!isNaN(Number(coord)))\n        coord = Number(coord);\n\n    if (coords.length) {\n        removeDataUsingCoords(coords, data[coord]);\n    } else {\n        if (Array.isArray(data))\n            data.splice(coord, 1); // in-place mutation\n        else\n            delete data[coord];\n    }\n}\n\n\nfunction moveDataUsingCoords(oldCoords, newCoords, data) {\n    let oldCoord = oldCoords.shift();\n\n    if (!isNaN(Number(oldCoord)))\n        oldCoord = Number(oldCoord);\n\n    if (oldCoords.length) {\n        moveDataUsingCoords(oldCoords, newCoords, data[oldCoord]);\n    } else {\n        if (Array.isArray(data)) {\n            /* Using newCoords allows us to move items from \n            one array to another. \n            However, for now, we're only moving items in a \n            single array.\n            */\n            let newCoord = newCoords[newCoords.length - 1];\n            \n            let item = data[oldCoord];\n\n            data.splice(oldCoord, 1);\n            data.splice(newCoord, 0, item);\n        }\n    }\n}\n","import JSONForm from './renderer';\n\n\nexport default {\n  JSONForm,\n};","import Form from './form';\n\n\nexport default function JSONForm(config) {\n    this.containerId = config.containerId;\n    this.dataInputId = config.dataInputId;\n    this.schema = config.schema;\n    this.data = config.data;\n    this.fileUploadEndpoint = config.fileUploadEndpoint;\n    this.fieldName = config.fieldName;\n    this.modelName = config.modelName;\n\n    this.render = function() {\n        ReactDOM.render(\n            <Form\n                schema={this.schema}\n                dataInputId={this.dataInputId}\n                data={this.data}\n                fileUploadEndpoint={this.fileUploadEndpoint}\n                fieldName={this.fieldName}\n                modelName={this.modelName}\n            />,\n            document.getElementById(this.containerId)\n        );\n    }\n}"],"names":["getBlankObject","schema","keys","schema_keys","properties","key","value","type","getBlankArray","items","push","getBlankData","getSyncedArray","data","newData","JSON","parse","stringify","i","length","item","getSyncedObject","Object","schemaValue","hasOwnProperty","Button","className","props","classes","split","React","trim","children","Loader","EditorContext","createContext","capitalize","string","charAt","toUpperCase","substr","toLowerCase","FormInput","label","inputRef","ref","FormCheckInput","name","undefined","checked","readOnly","disabled","FormRadioInput","options","map","option","inputValue","toString","FormSelectInput","FormFileInput","_this","getFileName","extractFileInfo","dataURL","dataURI","splitted","params","replace","filter","param","binary","atob","array","charCodeAt","blob","window","Blob","Uint8Array","dataURItoBlob","size","addNameToDataURL","encodeURIComponent","handleChange","e","file","target","files","fileName","reader","FileReader","onload","event","result","onChange","readAsDataURL","endpoint","context","fileUploadEndpoint","console","error","alert","setState","loading","formData","FormData","append","fieldName","modelName","slice","fetch","method","headers","document","cookie","indexOf","body","then","response","json","file_path","showFileBrowser","current","click","state","createRef","componentDidUpdate","prevProps","prevState","this","render","Component","FormTextareaInput","GroupTitle","FormRowControls","onMoveUp","onClick","title","onMoveDown","onRemove","FormRow","FormGroup","hasChildren","Children","count","innerClassName","level","addable","onAdd","FormField","InputField","inputProps","readonly","choices","widget","format","step","editable","onEdit","fieldType","callback","isNaN","Number","getStringFormRow","args","removable","getArrayFormRow","onMove","rows","groups","min_items","minItems","max_items","maxItems","nextArgs","getObjectFormRow","coords","index","additionalProperties","k","childName","getVerboseName","handleKeyEdit","prompt","handleKeyValueAdd","newKey","contextType","Form","populateDataInput","dataInput","shift","_data","setDataUsingCoords","coord","getFields","formGroups","addFieldset","removeFieldset","moveFieldset","style","color","blankData","addDataUsingCoords","removeDataUsingCoords","oldCoords","newCoords","moveDataUsingCoords","getElementById","dataInputId","Provider","Array","isArray","splice","oldCoord","newCoord","JSONForm","config","containerId","ReactDOM"],"mappings":"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"}